(()=>{"use strict";var e={28:(e,n,t)=>{t.d(n,{Z:()=>p});var o=t(537),r=t.n(o),i=t(645),c=t.n(i),a=t(667),l=t.n(a),s=new URL(t(937),t.b),d=c()(r()),A=l()(s);d.push([e.id,"@font-face {\n  font-family: 'Roboto';\n  src: url("+A+");\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  font-size: 1em;\n  font-weight: 400;\n  font-family: 'Roboto', Arial, Helvetica, sans-serif;\n  color: #555;\n}\n\nbody {\n  display: grid;\n  grid-template: 40px auto / 225px auto;\n  height: 100vh;\n  width: 100vw;\n}\n\n.header {\n  background-color: #38bdf8;\n  grid-column: 1 / 3;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding-left: 4px;\n}\n\n.logo {\n  height: 36px;\n}\n\nh1 {\n  font-size: 1.5em;\n  font-weight: bold;\n  color: white;\n}\n\n.navbar {\n  background-color: #f7f7f7;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 12px 16px;\n  font-size: 1.25em;\n  font-weight: bold;\n}\n\n.project {\n  display: flex;\n  justify-content: space-between;\n}\n\n.home,\n.week,\n.month,\n.project p,\n.add,\n.edit,\n.delete,\n.checkbox {\n  cursor: pointer;\n}\n\n.home:hover,\n.week:hover,\n.month:hover,\n.project p:hover {\n  color: black;\n  scale: 105%;\n  padding-left: 8px;\n}\n\n.add,\n.edit,\n.delete,\n.checkbox {\n  height: 24px;\n  width: 24px;\n}\n\n.add:hover,\n.edit:hover,\n.delete:hover,\n.checkbox:hover,\n.newProject:hover {\n  color: black;\n  filter: brightness(0%);\n}\n\n.projects {\n  padding-top: 12px;\n}\n\n.projectsContainer {\n  display: flex;\n  flex-direction: column;\n  padding-left: 12px;\n  gap: 8px;\n}\n\n.project {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.content {\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  overflow: scroll;\n}\n\n.newProject {\n  display: flex;\n  font-size: .8em;\n  align-items: center;\n  cursor: pointer;\n  width: fit-content;\n}\n\n.todo {\n  padding: 8px;\n  border-radius: 8px;\n  height: fit-content;\n  display: flex;\n  flex-direction: column;\n  min-width: 225px;\n}\n\n.low {\n  background-color: rgba(0, 255, 0, 0.6);\n}\n\n.medium {\n  background-color: rgba(255, 255, 0, 0.75);\n}\n\n.high {\n  background-color: rgba(255, 0, 0, 0.25);\n}\n\n.dueContainer,\n.priorityContainer {\n  display: grid;\n  grid-template-columns: auto auto 1fr auto auto;\n  gap: 6px;\n}\n\n.checkbox {\n  justify-self: end;\n}\n\n.complete {\n  filter: opacity(.5);\n}\n\n.selected {\n  color: black;\n  scale: 105%;\n  padding-left: 8px;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,qBAAqB;EACrB,4CAAsC;AACxC;;AAEA;EACE,SAAS;EACT,UAAU;EACV,cAAc;EACd,gBAAgB;EAChB,mDAAmD;EACnD,WAAW;AACb;;AAEA;EACE,aAAa;EACb,qCAAqC;EACrC,aAAa;EACb,YAAY;AACd;;AAEA;EACE,yBAAyB;EACzB,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,QAAQ;EACR,iBAAiB;AACnB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;EACjB,YAAY;AACd;;AAEA;EACE,yBAAyB;EACzB,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,kBAAkB;EAClB,iBAAiB;EACjB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;;;;;;;;EAQE,eAAe;AACjB;;AAEA;;;;EAIE,YAAY;EACZ,WAAW;EACX,iBAAiB;AACnB;;AAEA;;;;EAIE,YAAY;EACZ,WAAW;AACb;;AAEA;;;;;EAKE,YAAY;EACZ,sBAAsB;AACxB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,QAAQ;AACV;;AAEA;EACE,mBAAmB;EACnB,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,eAAe;EACf,mBAAmB;EACnB,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,mBAAmB;EACnB,aAAa;EACb,sBAAsB;EACtB,gBAAgB;AAClB;;AAEA;EACE,sCAAsC;AACxC;;AAEA;EACE,yCAAyC;AAC3C;;AAEA;EACE,uCAAuC;AACzC;;AAEA;;EAEE,aAAa;EACb,8CAA8C;EAC9C,QAAQ;AACV;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,WAAW;EACX,iBAAiB;AACnB",sourcesContent:["@font-face {\n  font-family: 'Roboto';\n  src: url('./fonts/Roboto-Regular.ttf');\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  font-size: 1em;\n  font-weight: 400;\n  font-family: 'Roboto', Arial, Helvetica, sans-serif;\n  color: #555;\n}\n\nbody {\n  display: grid;\n  grid-template: 40px auto / 225px auto;\n  height: 100vh;\n  width: 100vw;\n}\n\n.header {\n  background-color: #38bdf8;\n  grid-column: 1 / 3;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding-left: 4px;\n}\n\n.logo {\n  height: 36px;\n}\n\nh1 {\n  font-size: 1.5em;\n  font-weight: bold;\n  color: white;\n}\n\n.navbar {\n  background-color: #f7f7f7;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 12px 16px;\n  font-size: 1.25em;\n  font-weight: bold;\n}\n\n.project {\n  display: flex;\n  justify-content: space-between;\n}\n\n.home,\n.week,\n.month,\n.project p,\n.add,\n.edit,\n.delete,\n.checkbox {\n  cursor: pointer;\n}\n\n.home:hover,\n.week:hover,\n.month:hover,\n.project p:hover {\n  color: black;\n  scale: 105%;\n  padding-left: 8px;\n}\n\n.add,\n.edit,\n.delete,\n.checkbox {\n  height: 24px;\n  width: 24px;\n}\n\n.add:hover,\n.edit:hover,\n.delete:hover,\n.checkbox:hover,\n.newProject:hover {\n  color: black;\n  filter: brightness(0%);\n}\n\n.projects {\n  padding-top: 12px;\n}\n\n.projectsContainer {\n  display: flex;\n  flex-direction: column;\n  padding-left: 12px;\n  gap: 8px;\n}\n\n.project {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.content {\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  overflow: scroll;\n}\n\n.newProject {\n  display: flex;\n  font-size: .8em;\n  align-items: center;\n  cursor: pointer;\n  width: fit-content;\n}\n\n.todo {\n  padding: 8px;\n  border-radius: 8px;\n  height: fit-content;\n  display: flex;\n  flex-direction: column;\n  min-width: 225px;\n}\n\n.low {\n  background-color: rgba(0, 255, 0, 0.6);\n}\n\n.medium {\n  background-color: rgba(255, 255, 0, 0.75);\n}\n\n.high {\n  background-color: rgba(255, 0, 0, 0.25);\n}\n\n.dueContainer,\n.priorityContainer {\n  display: grid;\n  grid-template-columns: auto auto 1fr auto auto;\n  gap: 6px;\n}\n\n.checkbox {\n  justify-self: end;\n}\n\n.complete {\n  filter: opacity(.5);\n}\n\n.selected {\n  color: black;\n  scale: 105%;\n  padding-left: 8px;\n}"],sourceRoot:""}]);const p=d},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(o)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(c[l]=!0)}for(var s=0;s<e.length;s++){var d=[].concat(e[s]);o&&c[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),n.push(d))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */"),c=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(c).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},c=[],a=0;a<e.length;a++){var l=e[a],s=o.base?l[0]+o.base:l[0],d=i[s]||0,A="".concat(s," ").concat(d);i[s]=d+1;var p=t(A),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var f=r(u,o);o.byIndex=a,n.splice(a,0,{identifier:A,updater:f,references:1})}c.push(A)}return c}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var c=0;c<i.length;c++){var a=t(i[c]);n[a].references--}for(var l=o(e,r),s=0;s<i.length;s++){var d=t(i[s]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}i=l}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},937:(e,n,t)=>{e.exports=t.p+"fc2b5060f7accec5cf74.ttf"}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0;var o={};(()=>{t.d(o,{q:()=>R});var e=t(379),n=t.n(e),r=t(795),i=t.n(r),c=t(569),a=t.n(c),l=t(565),s=t.n(l),d=t(216),A=t.n(d),p=t(589),u=t.n(p),f=t(28),m={};m.styleTagTransform=u(),m.setAttributes=s(),m.insert=a().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=A(),n()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;const h=t.p+"665a1069ef016cf5476b.svg",E=t.p+"127634af5f0f4edd1c28.svg",C=t.p+"7cf8a52afe4672f643db.svg",g=t.p+"6b02d340fc798272486c.svg",b=t.p+"aa6c221efb4216e2e15d.svg",x=t.p+"32652fe3cf469a776f07.svg";function v(e){let n=e.target.parentNode.parentNode.classList;if(Array.from(n).includes("complete")){n.remove("complete");const t=document.createElement("img");t.setAttribute("src",C),t.setAttribute("alt","checkbox unchecked"),t.classList.add("checkbox"),e.target.after(t),t.addEventListener("click",v),e.target.remove()}else{n.add("complete");const t=document.createElement("img");t.setAttribute("src",x),t.setAttribute("alt","checkbox checked"),t.classList.add("checkbox"),e.target.after(t),t.addEventListener("click",v),e.target.remove()}}const y=document.querySelector(".content");function B(e){let n=document.createElement("div");n.classList.add("todo"),n.classList.add(e.priority.toLowerCase()),y.appendChild(n);let t=document.createElement("p");t.classList.add("title"),t.innerText=e.title,n.appendChild(t);let o=document.createElement("div");o.classList.add("dueContainer"),n.appendChild(o);let r=document.createElement("p");r.innerText="Due: ",o.appendChild(r);let i=document.createElement("p");i.innerText=e.dueDate,o.appendChild(i);let c=document.createElement("div");c.classList.add("priorityContainer"),n.appendChild(c);let a=document.createElement("p");a.innerText="Priority: ",c.appendChild(a);let l=document.createElement("p");l.innerText=e.priority,c.appendChild(l);let s=document.createElement("img");s.setAttribute("src",C),s.setAttribute("alt","checkbox unchecked"),s.classList.add("checkbox"),c.appendChild(s),s.addEventListener("click",v);let d=document.createElement("img");d.setAttribute("src",g),d.setAttribute("alt","edit"),d.classList.add("edit"),c.appendChild(d);let A=document.createElement("img");A.setAttribute("src",b),A.setAttribute("alt","delete"),A.classList.add("delete"),A.addEventListener("click",(()=>function(e){for(let n in R)R[n].title==e.project&&R[n].todoList.splice(R[n].todoList.indexOf(e),1);L()}(e))),c.appendChild(A)}function k(){for(let e of R)for(let n of e.todoList)B(n);document.querySelector(".home").classList.add("selected")}function w(e){for(let n in R)R[n].title==e.target.previousSibling.innerText&&R.splice(n,1);L(document.querySelector(".home")),j()}function L(e){!function(){const e=document.querySelector(".content");for(;e.firstChild;)e.removeChild(e.firstChild)}();const n=document.querySelector(".navbar"),t=document.querySelector(".projectsContainer"),o=Array.from(n.children),r=Array.from(t.children);if(null==e){for(let n in o)o[n].classList.contains("selected")&&(e=o[n]);for(let n in r)r[n].firstChild.classList.contains("selected")&&(e=r[n].firstChild)}else null!=e.target&&(e=e.target);for(let e in o)o[e].classList.contains("selected")&&o[e].classList.remove("selected");for(let e in r)r[e].firstChild.classList.contains("selected")&&r[e].firstChild.classList.remove("selected");"Home"==e.innerText?k():"Week"==e.innerText?document.querySelector(".week").classList.add("selected"):"Month"==e.innerText?document.querySelector(".month").classList.add("selected"):function(e){let n;for(let t in R)R[t].title==e.innerText&&(n=t);for(let e of R[n].todoList)B(e);const t=document.createElement("img");t.setAttribute("src",E),t.setAttribute("alt","Add Todo"),t.classList.add("add");const o=Array.from(document.querySelector(".projectsContainer").childNodes);for(let e in o){let n=Array.from(o[e].children);for(let e in n)n[e].classList.contains("delete")&&n[e].remove()}let r=document.createElement("img");r.setAttribute("src",b),r.setAttribute("alt","delete"),r.classList.add("delete"),r.addEventListener("click",w),e.parentNode.appendChild(r),document.querySelector(".content").appendChild(t),e.classList.add("selected")}(e)}function j(){!function(){const e=document.querySelector(".projectsContainer");for(;e.firstChild;)e.removeChild(e.firstChild)}();const e=document.querySelector(".projectsContainer");for(let n of R){let t=document.createElement("div");t.classList.add("project"),e.appendChild(t);let o=document.createElement("p");o.innerText=n.title,o.addEventListener("click",L),t.appendChild(o)}}const S=(e,n)=>({title:e,todoList:n});function T(){const e=document.querySelector(".projectsContainer");let n=[];const t=Array.from(e.children);for(let e in t)n.push(t[e].innerText);const o=document.createElement("input");o.setAttribute("type","text"),o.setAttribute("name","title"),e.appendChild(o),o.focus(),o.addEventListener("keydown",(e=>{if("Enter"==e.code){let e=o.value;if(""!=e&&!n.includes(e)){const n=S(e,[]);R.push(n),j()}}}))}const q=(e,n,t,o)=>({title:e,dueDate:n,priority:t,project:o});let R=[],Y=S("Example",[q("Take out the garbage","11/01/22","Low","Example"),q("Grocery shopping","11/02/22","Medium","Example"),q("Take a shower","11/01/22","High","Example")]);R.push(Y);let M=S("Example 2",[q("Fix the sink","11/01/22","Low","Example 2"),q("Take kids to school","11/02/22","Medium","Example 2"),q("Brush teeth","11/01/22","High","Example 2")]);R.push(M),j(),function(){const e=document.createElement("img");e.setAttribute("src",h),e.setAttribute("alt","checklist icon"),e.classList.add("logo"),document.querySelector(".header").insertBefore(e,document.querySelector("h1"));let n=document.createElement("img");n.setAttribute("src",E),n.setAttribute("alt","Add Project"),n.classList.add("add"),n.addEventListener("click",T),document.querySelector(".navbar").appendChild(n)}(),k(),document.querySelector(".home").addEventListener("click",L),document.querySelector(".week").addEventListener("click",L),document.querySelector(".month").addEventListener("click",L)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,